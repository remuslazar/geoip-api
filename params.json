{"name":"Geoip-api","tagline":"A simple Express4/node.js based Web-GUI/API to lookup and display the info from the GeoLite Database.","body":"GeoIP Lookup Web-GUI and API\r\n============================\r\n\r\nThis is a simple [Express4](http://expressjs.com) / node.js based\r\nWeb-GUI/API to lookup and display the info from the GeoLite Database,\r\nwhich is available for free usage from http://maxmind.com/.\r\n\r\nFor Web-Browsers (or other clients which accept HTML) there is a\r\nsimple GUI, for other clients or Ajax-Requests the data will be\r\nreturned JSON formatted.\r\n\r\nBy default the Client IP-Address will be used for the lookup, but a\r\ndifferent hostname/ip can be also optionally supplied.\r\n\r\nInstall & Setup\r\n---------------\r\n\r\nDo a `git clone` and `npm install --production`. The last step will\r\ndownload, install and unpack the GeoIP Lite database automatically.\r\n\r\n### Run\r\n\r\nTo run the application in production mode, simply provide the local\r\nPORT for Express, e.g.:\r\n\r\n`PORT=3000 NODE_ENV=production npm start`\r\n\r\nOr using forever\r\n\r\n`PORT=3000 NODE_ENV=production forever start geoip-api/bin/www`\r\n\r\n### Proxy Setup\r\n\r\nProxy Support is not enabled by default but could be enabled using the\r\n`PROXY=1` env setting. When enabled, the app will use the provided\r\nclient IP address from the *first upstream proxy* in the chain\r\n(e.g. your nginx or other reverse proxy).\r\n\r\nMake sure that your proxy setup will provide the client ip address\r\ninformation using the `X-Forwarded-For` HTTP headers.\r\n\r\n\r\nParameters\r\n----------\r\n\r\nThe Web-GUI uses a simple HTML form performing a `GET` request.  There\r\nis only one parameter available called `host`, which can be used for\r\nsupplying a hostname or an IP-address.\r\n\r\nWhen not using a Web-Browser, do supply the data as an URL Parameter,\r\ne.g. `GET /?host=79.250.123.182`\r\n\r\nNotice: When using a hostname, only the first resolved IPv4 address\r\nwill be used for the GeoIP lookup.\r\n\r\nJSONP Support\r\n-------------\r\n\r\nSupport for [JSONP](http://en.wikipedia.org/wiki/JSONP) requests is\r\navailable. Simply provide the name of the callback function as a query\r\nparameter called `jsonp` (see example section below)\r\n\r\nExample\r\n-------\r\n\r\n### Regular API-Call\r\n\r\n```\r\n$ curl -H accept:application/json http://localhost:3000/?host=www.google.com | prettyjson\r\n\r\nsuccess: true\r\ngeoip:\r\n  range:\r\n    - 2915172352\r\n    - 2915237887\r\n  country: US\r\n  region:  CA\r\n  city:    Mountain View\r\n  ll:\r\n    - 37.4192\r\n    - -122.0574\r\n```\r\n\r\n### JSONP Request\r\n\r\nFor JSON usage specify the callback function using the `callback` query\r\nparameter.\r\n\r\n```\r\ncurl 'http://localhost:3000/?host=www.google.com&callback=geoip'\r\n\r\ntypeof geoip === 'function' && geoip({\"success\":true,\"geoip\":{\"range\":[2915172352,2915237887],\"country\":\"US\",\"region\":\"CA\",\"city\":\"Mountain View\",\"ll\":[37.4192,-122.0574]}});\r\n```\r\n\r\n### Success state and error codes using the JSON API\r\n\r\nSuccessful requests will return a JSON object with the `success` key\r\nset to `true`. Else, `error.code` and `error.message` will be returned\r\n(see below)\r\n\r\n#### Success, GeoIP data available\r\n\r\n```\r\n{\r\n\t\"success\": true,\r\n\t\"geoip\": <GeoIP data, see the example above>\r\n}\r\n```\r\n\r\n#### DNS lookup failure\r\n\r\n```\r\n{\r\n\t\"success\": false,\r\n\t\"error\": {\r\n\t\t\"code\": 1,\r\n\t\t\"message\": \"No IPv4 DNS record found\"\r\n\t}\r\n}\r\n```\r\n\r\n#### No GeoIP data available\r\n\r\n```\r\n{\r\n\t\"success\": false,\r\n\t\"error\": {\r\n\t\t\"code\": 2,\r\n\t\t\"message\": \"No geoip data available\"\r\n\t}\r\n}\r\n```\r\n\r\nTechnical Details\r\n-----------------\r\n\r\nThis API uses the node-geoip module, which itself includes the GeoLite\r\ndatabase (the data will be downloaded/installed after the npm install\r\nstep automatically).\r\n\r\nReferences\r\n----------\r\n\r\n1. [node-geoip library](https://github.com/bluesmoon/node-geoip)\r\n\r\n\r\nCopyright\r\n---------\r\n\r\n`geoip-api` is Copyright 2014 Remus Lazar <remus@lazar.info> and the\r\nlatest version of the code is available at\r\nhttps://github.com/remuslazar/geoip-api\r\n\r\n\r\nLicense\r\n-------\r\n\r\nThere are two licenses for the code and data. See the LICENSE file for details.","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}